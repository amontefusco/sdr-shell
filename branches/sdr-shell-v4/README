
Getting started using SDR-Shell with the SoftRock RXTX 6.3

Getting a radio working with sdr-shell, dttsp, and utilities is a lot like
building your own radio, but with less solder.  Instead of solder wick and
a solder sucker, you have a reset button.

For information about the SoftRock SDR, see:

	http://www.kb9yig.com		The designer's site
	http://www.wb5rvz.com/sdr	Build instructions
	softrock40@yahoogroups.com	Soft Rock discussion group 
					(Very active)
	dttsp-linux@yahoogroups.com	the dttsp discussion group

sdr-shell requires:
  dttsp (two copies: one recieve one transmit)
  usbsoftrock 1.0.1

Building for Linux

Below are brief instructions on what is required to install just dttsp,
usbsoftrock and sdr-shell.

usbsoftrock is available from the softrock40 Yahoo Groups files area,
under VK6JBL's directory (usbsoftrock-1.0.1.tar.gz).

Fedora 13

(1) Install prerequisite packages with:
  sudo yum install libtool fftw-devel gsl-devel qt-devel liblo-devel hamlib

answer 'yes' to the dependencies.  Sorry, but hamlib really does require
200mb of disk space.

(2) Run 'qmake' to build the Makefile, then 'make' to build sdr-shell.

(3) Add yourself to the jackusers group in /etc/group.

Ubuntu

(1) Install prerequisite packages with:
sudo apt-get install build-essential
sudo apt-get install subversion
sudo apt-get install hamlib-dev
#sudo apt-get install qt3-dev-tools (qt-dev-tools for qt4?)
sudo apt-get install libsamplerate0-dev
sudo apt-get install libasound2-dev
sudo apt-get install libfreebob0-dev
sudo apt-get install libffado-dev
sudo apt-get install libsndfile-dev
sudo apt-get install libcelt-dev
sudo apt-get install libreadline-dev
sudo apt-get install autoconf automake
sudo apt-get install manpages-dev
sudo apt-get install fftw3 fftw3-dev libgsl0-dev
sudo apt-get install liblo0ldbl liblo0-dev
sudo apt-get install linux-rt

(2) Run 'qmake' to build the Makefile, then 'make' to build sdr-shell.

(3) Install jack2

svn co http://subversion.jackaudio.org/jack/jack2/trunk/jackmp
cd jackmp
./waf configure --alsa --firewire --freebob
./waf build
sudo ./waf install

The following steps are needed to use jack with the real-time kernel scheduler:

sudo su -c 'echo @audio - rtprio 99 >> /etc/security/limits.conf'
sudo su -c 'echo @audio - memlock 250000 >> /etc/security/limits.conf'
sudo su -c 'echo @audio - nice -10 >> /etc/security/limits.conf'

sudo usermod -G audio -a <user>

Replace <user> by your login_id. The system needs to be rebooted for the
changes to take effect.

All Linux

The following udev rules works well to allow the group softrock to use
usbsoftrock without root privileges. You can put it in /etc/udev/rules.d
and call it softrock.rules.

BUS=="usb", ACTION=="add", SSSYSFS{idVendor}=="16c0", SYSFS{idProduct}=="05dc",
MODE="660", GROUP="softrock"

Fedora 12+ and may be 11, openSUSE 11+, Ubuntu 9.10+ needs below
SUBSYSTEM=3D=3D"usb", ACTION=3D=3D"add", ATTR{idVendor}=3D=3D"16c0",=20
ATTR{idProduct}=3D=3D"05dc", MODE=3D"0660", GROUP=3D"admin", SYMLINK=3D"softrock"

the group "softrock" must exist in /etc/group, or substitute another group
name.

Running on Linux

The shell script 'start-delta44' will start jackd, usbsoftrock and sdr-shell.
You will need to adjust the settings in that script for your si570 oscillator
(usbsoftrock -x *value*), and your sound card's ports.


to send commands to the dttsp command port, use:
  nc -v -u localhost 19001


Building for OSX 10.6

When setting up to build for OSX, I wanted to use the fink and macports tools
to get the prerequisite packages.  I had very limited success in getting usable
prerequisites.  Both fink and macports build their packages in 32-bit (x86)
mode, while the compiler default on 10.6 is now 64 bit (x86_64) mode.  In order
to build against its packages requires setting:

	PATH=/sw/var/lib/fink/path-prefix-10.6:$PATH

Note that qt3mac from both package systems does not build on OSX 10.6 (it did
build on 10.5) and there doesn't appear to be anyone working on it.  Instead, I
selected 'qt3', which uses x11.

In all, I believe these packages were for building dttsp and sdr-shell:
  fink:
	qt3
  mac ports:
 	fftw-3 @3.2.2_0+i386 (active)
	fftw-3-single @3.2.2_0+i386 (active)
	gsl @1.13_1+darwin_i386 (active)

The more packages were built from source using the instructions in:

  http://groups.yahoo.com/group/dttsp-linux/files/build-dttsp.sh 

I also had to build hamlib-1.2.9 (I recall having to do something ugly to
hamlib to get it to compile -- it probably doesn't work).

Get the JACK Audio Connection Kit from from jackosx.com.  I've never
gotten the JACK in fink or macports to work.

Get usbsoftrock from http://groups.yahoo.com/group/softrock40/files/VK6JBL/

If you need to update the chip on your usb-synth or softrock USB board, see
 http://www.mydarc.de/dg8saq/AVR-USB/

Running on OSX

I am running on a Macbook Pro (2009 vintage) with a Creative Audigy USB audio
adapter.  It has 5+1 output and a Line/Mic input.  This adapter has given me
some problems: it always requires power cycling following the mac going to
sleep, but has been adequate for occasional use.  With four output channels
and 2 input channels in 24-bit mode, I can only use it for 4800 kHz of spectrum.
With usbsoftrock and the way sdr-shell displays spectrum this been adequate
for me.

1) fix the maximum UDP datagram size:
	sudo sysctl -w net.inet.udp.maxdgram=32768

2)   start the audio midi tool (Applications -> Utilities Audio MIDI Setup)
   create an aggregate device consisting of:
	audio output
	I/Q output
	I/Q input
	audio input (I use the microphone)
   set each to a 48khz input rate.

   deselect the 'thru' selection of the external line connector input source
 

3) start jackd using JackPilot.  I've never gotten jackd to start from
   the commandline due to problems finding shared libraries.

  Configuration:
      Jack Server
	Driver: coreaudio
	Interface: Aggregate Device
	Sample Rate: 4800
	Buffer Size: 2048
	Interface Output Channels: 4
	Interface Input Channels: 4

      Jack Router
	Virtual Input Channels: 4
	Virtual Output Channels: 4
	Auto Connect with physical ports: 4

If you find a way to start jack and midi tool from a shell script, please
post your solution!

4) start usbsoftrock, dttsp and sdr-shell:

start-audigy.sh


Use Notes

     Clicking the 'rx' symbol switches from receive to transmit and changes the
symbol to tx.  Clicking the 'tx' symbol turns transmit off.

     The receive dttsp is muted during transmit.  I found it unnerving to talk
while hearing myself echoed back with a 1/2 second delay.

     Bands are memories (there are ten of them) that are automaticly saved when
a band change occurs.  Bands wrap from ten to one going up, and from one to ten
when going down.

     I set the dttsp transmit gain to about 15-18 to get maximum power
out of my RXTX.

Keyboard Commands
	t	toggle transmit on/off
	space	turn transmit off
U	set_filer_l -1
I	set_filer_l +1
O	set_filter_h -1
P	set_filter_h +1
[	filter[lh] -= step
]	filter[lh] += step
q	iqGain--
w	iqGain++
e	iqPhase--
r	iqPhase++
z	specAperatureLow--
x	specAperatureLow++
c	specAperatureHigh--
v	specAperatureHigh++

h	down arrow
j	left arrow
k	right arrow
l	up arrow



Miscellaneous


Two Cards
I have, as a test, used two audio cards on Linux with dttsp, by running two
copies of jack:

   default jackd instance:
   /usr/bin/jackd -R -P55 -p128 -t2000 -dalsa -r48000 -D -Chw:2 -Phw:0 -s&
   start the receive dttsp

   second jackd instance:
   export JACK_DEFAULT_SERVER=tx
   /usr/bin/jackd -R -P55 -p128 -t2000 -dalsa -r48000 -D -Chw:0 -Phw:2 -s&
   start the transmit dttsp


I/Q Input on Speakers

If your audio output is on the same audio card as the I/Q input, you'll likely
hear some of the I/Q passed through.

To mute line input:
	amixer -c 0 controls
look for
	numid=18,iface=MIXER,name='Line Playback Switch'

run:
	amixer -c 0 cset numid=18 0

To change the input source:

	amixer controls

look for Capture Source

	amixer -c 0 cset numid=26 0     # set to mic
	amixer -c 0 cset numid=26 4     # set to line

I built the dttsp keyers with:
	gcc -g -O2 -I . -c keyboard-keyer.c
	gcc -g -O2 -I . -c iambic-keyer.c
	gcc  -g -O2   -o keyboard-keyer keyboard-keyer.o  libDttSP.a -llo \
		-lpthread -lm -ljack -lfftw3f
	gcc  -g -O2   -o iambic-keyer iambic-keyer.o  libDttSP.a -llo \
		-lpthread -lm -ljack -lfftw3f

Glen Overby, kc0iyt  gpoverby@gmail.com  December, 2010

